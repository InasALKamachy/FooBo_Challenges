Given a list (from 1 to 2000 elements) of random integers (from 1 to 999999) write a function, answer(l) that accepts a list as input and returns the number of "lucky triples" present in the list.

For this purpose, a lucky triple is defined as a list of three numbers (x,y,z) such that x divides y, y divides z, and x≤y≤z. So, for instance, (2,4,8) is a lucky triple and so is (1,1,1).

Test cases:

input: [1, 1, 1]
ouput: 1
input: [1, 2, 3, 4, 5, 6]
output: 3




def solution(l):
    if len(l) < 3:
        return 0
    if len(l) == 1:
        return 1
    count = 0
    for i in range(1, (len(l) - 1)):
        count_start = len([x for x in l[:i] if l[i] % x == 0])
        count_end = len([x for x in l[(i + 1):] if x % l[i] == 0])
        count += count_start * count_end
    return count
print(solution([1, 2, 3, 4, 5, 6]))
